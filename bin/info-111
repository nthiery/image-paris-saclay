#!/bin/sh

url="http://Nicolas.Thiery.name/Enseignement/Info111/"
if [ -n "$JUPYTERHUB_USER" ]; then
    USER=`basename -s -at-u-psud.fr $JUPYTERHUB_USER`
fi
SIF=tp-ssh1.dep-informatique.u-psud.fr
COURSE=Info111

help () {
    cat <<EOF

Aide pour l'utilisation de la commande info-111
===============================================

Télécharger et extraire l'archive pour un TP ou un projet (ici pour la semaine 1):

       cd ~/$COURSE
       info-111 fetch Semaine1

Soumettre son TP ou projet (ici pour la semaine 1):

       cd ~/$COURSE
       info-111 submit Semaine1

Lancer le notebook jupyter:

       info-111 jupyter notebook

Compiler un programme (ici essai.cpp):

       info-111 g++ essai.cpp -o essai

EOF
}

check_dir () {
    if [ `pwd` != "$HOME/$COURSE" ]; then
        echo Vous devez être dans le sous-répertoire $COURSE de votre répertoire pour lancer cette commande
        exit 1
    fi
}

run () {
    tput setaf 2
    echo -n "info-111: exécution de:"
    tput rmul
    echo -n " "
    tput setaf 1
    echo "$@"
    tput sgr0
    if [ -z $DRY_RUN ]; then
        "$@" || exit 1
    fi
}

fetch () {
    archive=$1
    run wget "$url/$archive.zip"
    run unzip "$archive.zip"
    run rm "$archive.zip"
    exit 0
}

submit() {
    run nbgrader submit --Exchange.root=/public/info-111/exchange --course=$COURSE $1
    exit 0
}

mount() {
    cd $HOME
    run mkdir -p $COURSE
    run sshfs $USER@$SIF:$COURSE $COURSE
    exit 0
}

sync_from_tp() {
    cd $HOME
    run rsync --update -avz  $USER@$SIF:$COURSE/ $COURSE/
    exit 0
}

clean_root_files() {
    cd $HOME
    echo "Nettoyage des fichiers indus"
    for x in *; do test -O $x  || mv $x .$x; done
    exit 0
}

command=$1

if [ "$command" = "-n" ]; then
    DRY_RUN="true"
    shift
    command=$1
fi

if [ -z $command ]; then
    help;
    exit 0
fi

shift || help

case $command in
    help)
        help
        exit 0;;
    g++)
        command="g++ -Wall -pedantic -Wno-sign-compare -Wno-unused-value -std=c++11 ";;
    jupyter)
        if [ "$1" = "notebook" ]; then
            shift
            command="jupyter notebook --ip=127.0.0.1"
        fi;;
    get)
        check_dir
        fetch "$@";;
    fetch)
        check_dir
        fetch "$@";;
    submit)
        check_dir
        submit "$@";;
    run) # run an arbitrary command in the conda environment; for testing and teacher's use
        command="$1"
        shift;;
    mount)
        mount;;
    sync)
        sync_from_tp;;
    clean_root_files)
        clean_root_files;;
    *)
        echo commande info-111 $command inconnue
        help
        exit 1
        ;;
esac

run $command "$@"
